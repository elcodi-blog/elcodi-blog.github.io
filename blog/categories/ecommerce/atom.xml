<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ecommerce | Elcodi blog]]></title>
  <link href="http://elcodi-blog.github.io/blog/categories/ecommerce/atom.xml" rel="self"/>
  <link href="http://elcodi-blog.github.io/"/>
  <updated>2015-04-01T17:17:57+02:00</updated>
  <id>http://elcodi-blog.github.io/</id>
  <author>
    <name><![CDATA[Elcodi Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Elcodi changes its technology]]></title>
    <link href="http://elcodi-blog.github.io/blog/2015/04/01/elcodi-changes-its-technology/"/>
    <updated>2015-04-01T16:45:38+02:00</updated>
    <id>http://elcodi-blog.github.io/blog/2015/04/01/elcodi-changes-its-technology</id>
    <content type="html"><![CDATA[<p>This is an official statement from Elcodi Team.</p>

<p>After some nice months using Symfony in our project Elcodi, and after many
reflections on how to increase the project quality, we&rsquo;re proud to announce that
we are moving to Ruby on Rails.</p>

<p>Until version <code>v0.6.*</code> we will continue evolving our code for these people who
is nowadays using Elcodi in their projects, but after that, we will move all
our code to Ruby.</p>

<p>If you need some information, feel free to keep in touch with us in our
<a href="https://gitter.im/elcodi/elcodi">Gitter account</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[We have evolved]]></title>
    <link href="http://elcodi-blog.github.io/blog/2014/08/28/we-have-evolved/"/>
    <updated>2014-08-28T11:42:47+02:00</updated>
    <id>http://elcodi-blog.github.io/blog/2014/08/28/we-have-evolved</id>
    <content type="html"><![CDATA[<p>You might say that we&rsquo;ve evolved.</p>

<p>An evolution ought to be seen as a positive thing, and ours is no exception.
At first, we had serious doubts about the nature of our project. One of the
questions we kept asking ourselves was what factors should we consider in
choosing whether and when to engage external projects or libraries, and we
believe we made the right decision. In fact, that decision brought us forward in
a big way toward defining ourselves.</p>

<p>Flexible e-commerce components for Symfony2</p>

<p>Anyway, this phrase is actually very ambiguous, as we could be referring to
Symfony as a set of PHP components or as the Framework (I&rsquo;ve always wondered
why they have the same name&hellip; it causes a lot of confusion).</p>

<p>That&rsquo;s why we wanted to reflect a bit, starting from the code itself. Do we want
to use the Symfony Framework or the Symfony Components? The answer seemed to
emerge spontaneously. We want to work with the Symfony components, but we also
want to propose bundles that use the framework.</p>

<p>This was the origin of this commit.</p>

<p><a href="https://github.com/elcodi/elcodi/pull/239">https://github.com/elcodi/elcodi/pull/239</a></p>

<p>We have only just planted the seed with this refactoring. We have realized, even
more, the importance of having both functional testing and unit testing (unit
tests are almost all for the components, while functional tests are for the
bundles). This needs more work, but at least we have lifted this project to a
level at which we truly feel comfortable. It&rsquo;s an excellent starting point for
a long and exciting path ahead.</p>

<p>This change has resulted in some collateral damage, as it has changed the path
of our bundles, meaning that the &ldquo;subtree split&rdquo; has resulted in totally new
repositories beginning with the first commit after refactoring. This means that
all tags prior to version 0.3.0 have been lost, so we apologize to those who
have started to tinkle with our new bundles. You&rsquo;ll now need to adapt to version
~0.3 and check that everything&rsquo;s working.</p>

<p>We are available for any questions or concerns.</p>

<p>Happy coding!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elcodi team]]></title>
    <link href="http://elcodi-blog.github.io/blog/2014/08/14/elcodi-team/"/>
    <updated>2014-08-14T10:28:08+02:00</updated>
    <id>http://elcodi-blog.github.io/blog/2014/08/14/elcodi-team</id>
    <content type="html"><![CDATA[<h5>This is the follow-up of a series of posts</h5>

<ul>
<li><a href="/blog/2014/08/11/a-short-break-for-meditation/">A short break for meditation</a></li>
<li><a href="/blog/2014/08/12/our-roadmap/">Our roadmap</a>.</li>
<li><a href="/blog/2014/08/13/our-goals/">Our goals</a></li>
</ul>


<p>As a final point for what we shared in previous posts, the last but definitely not least element to consider is the <em>team</em>.</p>

<p>Such an ambitious venture needs a committed and visionary crew, and obviously more <em>heads</em> and <em>hands</em>. This is why we are opening job positions for a couple of skilled software artisans willing to join the journey with us. We will soon post the complete description. The company is located in Barcelona, Spain.</p>

<p>We are looking for passionate and inspired artisans that love to craft products to be used by fellow developers and that believe in the potential of a community that grows around an <em>opensource</em> project.</p>

<h2>Community</h2>

<p>The final word is a big <strong>thank you</strong> to all the people that have been supporting us &ndash; by contributing in different forms &ndash; and to whom will do it someday.</p>

<p>We really seek to build something useful for the community and to receive the necessary feedback and support in order to speed up the development and deliver the sound, reliable, flexible product that we have in mind.</p>

<p>As for now, the Elcodi team hopes that you&rsquo;ll get involved with the project and wishes you a great summer break.</p>

<p>Stay tuned!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Our goals]]></title>
    <link href="http://elcodi-blog.github.io/blog/2014/08/13/our-goals/"/>
    <updated>2014-08-13T10:26:56+02:00</updated>
    <id>http://elcodi-blog.github.io/blog/2014/08/13/our-goals</id>
    <content type="html"><![CDATA[<h5>This is the follow-up of a series of posts</h5>

<ul>
<li><a href="/blog/2014/08/11/a-short-break-for-meditation/">A short break for meditation</a></li>
<li><a href="/blog/2014/08/12/our-roadmap/">Our roadmap</a>.</li>
</ul>


<p>In the folowing weeks we would like to get to a first community stable version. Though last week we placed the initial milestone it is important to define a release plan for the following steps.</p>

<p>We set up a list of <a href="https://github.com/elcodi/elcodi/milestones">milestones</a> to show a proposed roadmap:</p>

<p>```
Version 0.3</p>

<pre><code>- Closed 8 days ago
- 100% complete  0 open  11 closed
</code></pre>

<p>Version 0.4</p>

<pre><code>- Due by August 15, 2014
- 0% complete  0 open  0 closed
</code></pre>

<p>Version 0.5</p>

<pre><code>- Due by August 29, 2014
- 17% complete  5 open  1 closed
</code></pre>

<p>Version 0.6</p>

<pre><code>- Due by September 11, 2014
- 0% complete  2 open  0 closed
</code></pre>

<p>```</p>

<p>This means we will be working on fine-tune our general roadmap and on fixing and refining what we have &ndash; no new features will be developed until we improve stability &ndash; in the hope of clearing things up a bit for developers interested in working with Elcodi foundations.</p>

<p>At this stage, it is possible for new commits to introduce <em>BC breaks</em>. There is an open <a href="https://github.com/elcodi/elcodi/issues/34">issue</a> regarding <code>@api</code> tagging in phpdoc but as suggests in the discussion it is not really needed in the absence of a frozen stable release.</p>

<p>We won&rsquo;t be following strict <a href="http://semver.org/">semantic versioning</a> until we reach a stable release, though we are using <em>patch version</em> for small fixes that do not cause incompatibilities and <em>minor version</em> for changes that <em>could</em> cause BC.</p>

<p>Of course this will change once we approach <code>v1.0</code>, when we will <code>@api</code> freeze core components and enforce full semantic versioning.</p>

<p>Reaching the <code>stable</code> version also means we will release the <em>Market</em>, so that plugins and components can be developed with no fears of major version breaks.</p>

<p>We are on our way there, things look good!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Our roadmap]]></title>
    <link href="http://elcodi-blog.github.io/blog/2014/08/12/our-roadmap/"/>
    <updated>2014-08-12T09:55:48+02:00</updated>
    <id>http://elcodi-blog.github.io/blog/2014/08/12/our-roadmap</id>
    <content type="html"><![CDATA[<h5>This is the second part of a <a href="/blog/2014/08/11/a-short-break-for-meditation/">previous post</a></h5>

<p>We can proudly state we have a lot to do in the following months.</p>

<p>Question is, what now? Maybe we are 1% done along our path, although &ldquo;done&rdquo; in our world sounds a bit odd since there is always room for improvement.
As long as our issue tracker list gets fed, we will stay hungry for enhancing our code.</p>

<h3>GeoBundle</h3>

<p>One of the most recurring challenges in e-commerce development is the modeling of geographic and administrative divisions. We will put our efforts in designing a simple yet extensible set of entities and relations as well as strategies to implement custom tree structures.</p>

<h3>Rule management</h3>

<p>Rule-based decision logic is ubiquitous in e-commerce applications. A few examples:</p>

<ul>
<li>Which discount coupon can be automatically applied upon entering the checkout process?</li>
<li>Can a particular discount code be applied?</li>
<li>Can two specific products be added to the same cart?</li>
<li>Can a specific product combination trigger a discount, an up-sell or a different offer?</li>
<li>When is it possible to use a specific carrier or payment method?</li>
</ul>


<p>Elcodi <a href="https://github.com/elcodi/rulebundle">RuleBundle</a> aims at solving these kinds of issue.</p>

<h3>Ports and Adapters</h3>

<p>We surely want to promote high-cohesion, loose-coupled software components. Right now we are halfway, as described in the <a href="/blog/2014/08/11/a-short-break-for-meditation/">previous post</a>, but we want to keep improving. A typical usage of P&amp;A would be to decouple Symfony bundles from other significant objects in the domain, or to be able to use Elcodi Cart component without depending on the CustomerBundle.</p>

<h3>Tests</h3>

<p>A great deal of credibility for an open source project is earned by instilling a thorough and sound test methodology. We assume that we&rsquo;ve been lacking on this specific subject, doing our homeworks halfway. This will be addressed both for Elcodi core repository and web applications (<a href="https://github.com/elcodi/bamboo-store">BambooStore</a> and <a href="https://github.com/elcodi/bamboo-admin">BambooAdmin</a>) by raising the coverage of unit and functional tests and start working with acceptance tests for the web apps.</p>

<p>We have not decided yet which toolset we will be using, surely one between <a href="http://docs.behat.org/">Behat3</a> and <a href="http://www.phpspec.net/">PHPSpec2</a>. As always, suggestions are more than welcome!</p>

<h3>PaymentSuite</h3>

<p>The <a href="http://github.com/PaymentSuite">PaymentSuite</a> was conceived and grown inside Elcodi.</p>

<p>It is a payment processing suite developed in Symfony2 which follows our vision of extensibility using adapters and dispatched events to give maximum flexibility to implementers and to decouple specific <code>Cart</code> or <code>Order</code> implementations. It promotes easy and sensible defaults for configurations.</p>

<p>We will take care of the project and will evolve it as the default payment platform. The <a href="http://bamboo.elcodi.com">BambooStore</a> is already using a dummy <a href="https://github.com/PaymentSuite/FreePaymentBundle">free payment</a> method.</p>

<h3>ShippingSuite</h3>

<p>We would like to follow a similar path as the PaymentSuite: a separated and parallel project that does not depend on Elcodi and that can be easy integrated in web applications. Same vision, same resilience philosophy: work with <code>Order</code> or <code>Carrier</code> as <em>adaptees</em>.</p>

<h3>Documentation</h3>

<p>Akin to the phisolophers' stone, sibling of the Holy Grail, the documentation is the most precious gemstone that an open source project should strive to shape. As Symfony2 author <a href="https://twitter.com/fabpot">@fabpot</a> once said, it is the most challenging part of any project.</p>

<p>We are working on the foundation of an <a href="http://elcodi.readthedocs.org">english documentation</a>, localized and translated version will follow later on. This is a list of topics that we will elaborate further:</p>

<ul>
<li>Implementation guidelines. General vision and coding philosophy, style and everything needed for developers wishing to contribute.</li>
<li>Customizations. Craft a project using only Elcodi core. Architectural constraints to keep in mind. Recipes and examples.</li>
<li>Core bundles documentation, including

<ul>
<li>Provisioned Model</li>
<li>Event system rationale and taxonomies</li>
<li>Services</li>
<li>Configuration</li>
<li>Controllers and extensions, where it may apply</li>
</ul>
</li>
<li><a href="https://github.com/elcodi/bamboo-store">Bamboo</a> <a href="https://github.com/elcodi/bamboo-admin">web applications</a> documentation for Symfony and front-end developers: the starting point to develop your e-commerce site.</li>
</ul>


<p>This is going to be an epic effort and the real main entrance to the project for the community. No matter the size of your codebase is, documentation is a key measure of a project success.</p>

<h2>Community</h2>

<p>If documentation should be our <em>diamond</em>, the community should be our <em>propellant</em>. A good community makes a project good.</p>

<p>We started as a small project and we know how demanding it can be to get involved and contribute to the development of an open source based product.</p>

<p>We will take special care of this particular topic, since motivating people and get them involved is essential for our vision: Elcodi was never mean to be a mere code repository, it is a group of visionary people with a clear view in their minds, working together to work out a specific problem.</p>

<p>Taking care of the code means caring for the people that make it possible for the code to be crafted. We are especially interested in helping those who want to learn, so we will soon arrange training and learning mechanisms, both for Symfony and Elcodi.</p>

<p>Get ready to be effective!</p>
]]></content>
  </entry>
  
</feed>
